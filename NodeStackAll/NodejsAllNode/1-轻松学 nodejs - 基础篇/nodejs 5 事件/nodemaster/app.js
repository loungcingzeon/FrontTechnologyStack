// 原生JS的事件  /*  element.on('click', () => {    console.log('clicked');  });*/// Nodejs 事件let events = require('events'); // 事件let util = require('util');     // Node工具库，也是Node的核心库之一// TODO: NodeJS 事件{  // 1. 事件的对象  let myEmitter = new events.EventEmitter();// 2. 绑定了一个 someEvent 的事件  myEmitter.on('someEvent', (message) => {    console.log(message);  });// 3. 触发事件，直接加上事件的名字  myEmitter.emit('someEvent', 'the event was emitted node js'); // the event was emitted}{  let Person = function(name){    this.name =name;  }  // 继承  inherits是继承的意思  /**   * util.inherits 是 util 继承 Person   */  util.inherits(Person, events.EventEmitter);  let xiaoming = new Person('xiaoming');  let lili = new Person('lili');  let lucy = new Person('lucy');  let person = [xiaoming, lili, lucy];  person.forEach((person) => {    person.on('speak', (message) => {      console.log(person.name + " said: " + message);    });  });  xiaoming.emit('speak', 'hi');          // xiaoming said: hi  lucy.emit('speak', 'I want a curry');  // lucy said: I want a curry}